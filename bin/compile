#!/usr/bin/env bash

################################################################################
# Essentials
################################################################################

set -x

HEROKU_BUILD_DIR=$1
HEROKU_CACHE_DIR=$2
HEROKU_ENV_DIR=$3

# Essental functions

export_env_dir() {
  env_dir=$1
  whitelist_regex=${2:-''}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      echo "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

indent() {
  sed -u 's/^/      /'
}

# Load env variables

export_env_vars "$HEROKU_ENV_DIR"

################################################################################
# Variables
################################################################################

TOR_COMMAND="run_tor_proxy"
TOR_DIST_URL="https://dist.torproject.org/"

if [ -z "$TOR_VERSION" ]; then
  TOR_SRC_NAME=tor-${TOR_VERSION}.tar.gz
else
  TOR_SRCH="tor-.\..\..\..\.tar\.gz"
  TOR_SRC_NAME=$(curl -s "$TOR_DIST_URL" | grep -o -e "$TOR_SRCH" | sort | tail -1)
fi

if [ -z "$TOR_CONTROL_PASS" ]; then
  TOR_CONTROL_PASS="torProxy@123"
fi

if [ -z "$TOR_CONTROL_PORT" ]; then
  TOR_CONTROL_PORT="9051"
fi

TOR_SIG_NAME=${TOR_SRC_NAME}.asc
TOR_SRC_URL=${TOR_DIST_URL}${TOR_SRC_NAME}
TOR_SRC_SIG_URL=${TOR_DIST_URL}${TOR_SIG_NAME}

################################################################################
# Check Cache
################################################################################

mkdir -p "$HEROKU_CACHE_DIR"
grep -wq "${TOR_SRC_NAME}" "${HEROKU_CACHE_DIR}/tor_version.txt"

if [ $? -eq 0 ]; then
   IS_TOR_CACHED=1
else
   IS_TOR_CACHED=0
fi

################################################################################
# Download Tor
################################################################################

if [ $IS_TOR_CACHED -eq 0 ]; then
    echo "Downloading ${TOR_SRC_URL}"
    wget -q "$TOR_SRC_URL"

    if [ $? -ne 0 ]; then
        echo "FAILED to obtain ${TOR_SRC_URL}" | indent
        exit 1
    fi

    echo "Downloading ${TOR_SRC_SIG_URL}"
    wget -q "$TOR_SRC_SIG_URL"

    if [ $? -ne 0 ]; then
        echo "FAILED to obtain signature ${TOR_SRC_SIG_URL}" | indent
        exit 1
    fi
fi

################################################################################
# Check Integrity
################################################################################
if [ $IS_TOR_CACHED -eq 0 ] ; then
    gpg --keyserver pool.sks-keyservers.net --recv-keys 0x4E2C6E8793298290
    gpg --keyserver pool.sks-keyservers.net --recv-keys 0x6AFEE6D49E92B601
    gpg --verify "$TOR_SIG_NAME" "$TOR_SRC_NAME" | grep -c "Good signature"

    if [ $? -lt 1 ]; then
        echo "FAILED to verify the signature" | indent
        exit 1
    fi
fi

################################################################################
# Compile Tor
################################################################################
if [ $IS_TOR_CACHED -eq 0 ] ; then
    tar -zxf "$TOR_SRC_NAME"
    cd "tor-${TOR_VER}" || echo "FAILED to configure Tor"

    ./configure --prefix="${HEROKU_CACHE_DIR}/tor"
    if [ $? -ne 0 ]; then
        echo "FAILED to configure for compiling Tor" | indent
        exit 1
    fi

    make install
    if [ $? -ne 0 ]; then
        echo "FAILED to compile Tor" | indent
        exit  1
    fi
fi

################################################################################
# Install Tor
################################################################################

# Get the build from the cache
cp -r "${HEROKU_CACHE_DIR}/tor" "$HEROKU_BUILD_DIR"

# Save the version compiled now
echo "$TOR_SRC_NAME" > "${HEROKU_CACHE_DIR}/tor_version.txt"

echo "Configuring the Tor Proxy" | indent

TOR_HASHED_PASS=$("${HEROKU_BUILD_DIR}/tor/bin/tor" --hash-password "$TOR_CONTROL_PASS")

cat > "${HEROKU_BUILD_DIR}/tor/bin/${TOR_COMMAND}" <<EOF
#!/usr/bin/env bash

echo "Setting up the control server"

echo "ControlPort ${TOR_CONTROL_PORT}" >> "${HOME}/tor/etc/tor/torrc"
echo "HashedControlPassword ${TOR_HASHED_PASS}" >> "${HOME}/tor/etc/tor/torrc"

"${HOME}/tor/bin/tor" -f "${HOME}/tor/etc/tor/torrc" &
exec \$*
EOF

chmod a+x "${HEROKU_BUILD_DIR}/tor/bin/${TOR_COMMAND}"

echo "Activating the auto-runner" | indent

cp "${BUILDPACK_DIR}/extra/${TOR_COMMAND}.sh" "${BUILD_DIR}/.profile.d/"
chmod +x "${BUILD_DIR}/.profile.d/${TOR_COMMAND}.sh"

echo "SUCCESS at installing Tor Proxy" | indent
